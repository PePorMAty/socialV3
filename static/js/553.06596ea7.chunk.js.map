{"version":3,"file":"static/js/553.06596ea7.chunk.js","mappings":"uLACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAgH,+BAAhH,EAA6J,6BAA7J,EAAiM,sBAAjM,EAA6N,qBCA7N,EAA0B,4BAA1B,EAA+D,2BAA/D,EAAmG,2B,mBCkBnG,EAfmB,SAACA,GAClB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAASC,UACvBH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CACNC,GAAI,YAAcN,EAAMO,GACxBL,UAAW,SAAAM,GAAA,IAAGC,EAAQD,EAARC,SAAQ,MACZ,GAAAC,OAARD,EAAcN,EAAgBA,EAAW,EAC1CC,SAEAJ,EAAMW,QAIf,EChBA,EAA0B,6BCM1B,EAJoB,SAACX,GACnB,OAAOC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAUC,SAAEJ,EAAMY,SAC3C,EC6CA,EA7CgB,SAACZ,GACf,IAAMa,EAAkBb,EAAMc,QAAQC,KAAI,SAACC,GAAI,OAC7Cf,EAAAA,EAAAA,KAACgB,EAAU,CAACN,KAAMK,EAAKL,KAAMJ,GAAIS,EAAKT,IAASS,EAAKT,GAAM,IAEtDW,EAAmBlB,EAAMmB,SAASJ,KAAI,SAACC,GAAI,OAC/Cf,EAAAA,EAAAA,KAACmB,EAAW,CAACR,QAASI,EAAKJ,QAASL,GAAIS,EAAKT,IAASS,EAAKT,GAAM,IAG7Dc,GAAMC,EAAAA,EAAAA,UAgBZ,OACEC,EAAAA,EAAAA,MAAA,OAAKrB,UAAWC,EAAUC,SAAA,EACxBH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAeC,SAAES,KACjCU,EAAAA,EAAAA,MAAA,OAAKrB,UAAWC,EAAgBC,SAAA,CAC7Bc,GACDK,EAAAA,EAAAA,MAAA,OAAKrB,UAAWC,EAAcC,SAAA,EAC5BH,EAAAA,EAAAA,KAAA,YACEC,UAAWC,EACXkB,IAAKA,EACLG,MAAOxB,EAAMyB,eACbC,SAfc,WACtB,IAAIC,EAAUN,EAAIO,QAAQJ,MAC1BxB,EAAM6B,kBAAkBF,EAC1B,KAcQ1B,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAO2B,QA1BP,WACzB,IAAIC,EAAOV,EAAIO,QAAQJ,MACG,KAAtBH,EAAIO,QAAQJ,MACdO,EAAO,KAEP/B,EAAMgC,WAAWD,EAErB,EAmB8D3B,SAAC,iBAOjE,ECfA,GAF8B6B,E,QAAAA,IAzBL,WACvB,IAAMd,GAAWe,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMrB,QAAQsB,YAAY,IAC5DtB,GAAUoB,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMrB,QAAQuB,WAAW,IAC1DZ,GAAiBS,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMrB,QAAQW,cAAc,IACpEa,GAAWC,EAAAA,EAAAA,MAUjB,OACEtC,EAAAA,EAAAA,KAACuC,EAAO,CACNf,eAAgBA,EAChBN,SAAUA,EACVL,QAASA,EACTkB,WAbuB,SAACD,GAC1BO,GAASN,EAAAA,EAAAA,IAAW,CAAED,KAAAA,IACxB,EAYIF,kBAVoB,SAACF,GACvBW,GAAST,EAAAA,EAAAA,IAAkB,CAAEF,QAAAA,IAC/B,GAWF,G","sources":["webpack://socialv3/./src/pages/dialogs/Dialogs.module.scss?d465","webpack://socialv3/./src/components/dialogsItem/DialogItem.module.scss?3569","components/dialogsItem/DialogItem.jsx","webpack://socialv3/./src/components/messageItem/MessageItem.module.scss?de80","components/messageItem/MessageItem.jsx","pages/dialogs/Dialogs.jsx","pages/dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__S7lbZ\",\"dialogsItems\":\"Dialogs_dialogsItems__Oo7HT\",\"messagesItems\":\"Dialogs_messagesItems__Nzhut\",\"areaWrapper\":\"Dialogs_areaWrapper__XNQnM\",\"area\":\"Dialogs_area__U91na\",\"btn\":\"Dialogs_btn__+1Oyj\"};","// extracted by mini-css-extract-plugin\nexport default {\"navLink\":\"DialogItem_navLink__6ukLp\",\"active\":\"DialogItem_active__tpm5Z\",\"dialog\":\"DialogItem_dialog__F-oC8\"};","import React from \"react\";\r\nimport s from \"./DialogItem.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <div className={s.dialog}>\r\n      <NavLink\r\n        to={\"/dialogs/\" + props.id}\r\n        className={({ isActive }) =>\r\n          isActive ? `${s.active}` : `${s.navLink}`\r\n        }\r\n      >\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"MessageItem_message__GEgEl\"};","import React from \"react\";\r\nimport s from \"./MessageItem.module.scss\";\r\n\r\nconst MessageItem = (props) => {\r\n  return <div className={s.message}>{props.message}</div>;\r\n};\r\n\r\nexport default MessageItem;\r\n","import React, { useRef } from \"react\";\r\nimport s from \"./Dialogs.module.scss\";\r\nimport DialogItem from \"../../components/dialogsItem/DialogItem\";\r\nimport MessageItem from \"./../../components/messageItem/MessageItem\";\r\n\r\nconst Dialogs = (props) => {\r\n  const dialogsElements = props.dialogs.map((item) => (\r\n    <DialogItem name={item.name} id={item.id} key={item.id} />\r\n  ));\r\n  const messagesElements = props.messages.map((item) => (\r\n    <MessageItem message={item.message} id={item.id} key={item.id} />\r\n  ));\r\n\r\n  const ref = useRef();\r\n\r\n  const addMessageDispatch = () => {\r\n    let text = ref.current.value;\r\n    if (ref.current.value === \"\") {\r\n      text = null;\r\n    } else {\r\n      props.addMessage(text);\r\n    }\r\n  };\r\n\r\n  const onMessageChange = () => {\r\n    let newText = ref.current.value;\r\n    props.updateMessageText(newText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messagesItems}>\r\n        {messagesElements}\r\n        <div className={s.areaWrapper}>\r\n          <textarea\r\n            className={s.area}\r\n            ref={ref}\r\n            value={props.newMessageText}\r\n            onChange={onMessageChange}\r\n          ></textarea>\r\n          <button className={s.btn} onClick={addMessageDispatch}>\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addMessage, updateMessageText } from \"../../store/slices/dialogsSlice\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\n\r\nconst DialogsContainer = () => {\r\n  const messages = useSelector((state) => state.dialogs.messagesData);\r\n  const dialogs = useSelector((state) => state.dialogs.dialogsData);\r\n  const newMessageText = useSelector((state) => state.dialogs.newMessageText);\r\n  const dispatch = useDispatch();\r\n\r\n  const addMessageDispatch = (text) => {\r\n    dispatch(addMessage({ text }));\r\n  };\r\n\r\n  const onMessageChange = (newText) => {\r\n    dispatch(updateMessageText({ newText }));\r\n  };\r\n\r\n  return (\r\n    <Dialogs\r\n      newMessageText={newMessageText}\r\n      messages={messages}\r\n      dialogs={dialogs}\r\n      addMessage={addMessageDispatch}\r\n      updateMessageText={onMessageChange}\r\n    />\r\n  );\r\n};\r\n\r\nconst AuthRedirectComponent = withAuthRedirect(DialogsContainer);\r\n\r\nexport default AuthRedirectComponent;\r\n"],"names":["props","_jsx","className","s","children","NavLink","to","id","_ref","isActive","concat","name","message","dialogsElements","dialogs","map","item","DialogItem","messagesElements","messages","MessageItem","ref","useRef","_jsxs","value","newMessageText","onChange","newText","current","updateMessageText","onClick","text","addMessage","withAuthRedirect","useSelector","state","messagesData","dialogsData","dispatch","useDispatch","Dialogs"],"sourceRoot":""}